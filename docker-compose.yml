version: '3.8'

services:
  # ===== Django 应用服务 =====
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cardverification_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=CardVerification.settings
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cardverification_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health/', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== PostgreSQL 数据库服务 =====
  db:
    image: postgres:15-alpine
    container_name: cardverification_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cardverification}
      - POSTGRES_USER=${POSTGRES_USER:-cardverification}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - cardverification_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cardverification} -d ${POSTGRES_DB:-cardverification}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===== Redis 缓存服务 =====
  redis:
    image: redis:7-alpine
    container_name: cardverification_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cardverification_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ===== Nginx 反向代理（可选）=====
  nginx:
    image: nginx:alpine
    container_name: cardverification_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - cardverification_network
    profiles:
      - nginx

# ===== 数据卷配置 =====
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

# ===== 网络配置 =====
networks:
  cardverification_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
